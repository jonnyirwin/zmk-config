#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define APT 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4
#define BLE 5


&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC LSHFT RSHFT>;
};

/ {
    macros {
        macro_shiftable_sch: macro_shiftable_sch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                    &macro_tap &kp S
                    &macro_release &kp RSHIFT
                    &macro_tap &kp C &kp H
            >;
            tap-ms = <10>;
        };
    };
};


#define COMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <20>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};
#define SLOWCOMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <40>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};
#define TCOMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
combo_##NAME { \
    timeout-ms = <TIMEOUT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};

#define COMBOS_TOP_ROW(LTPR, LTRM, LTMI, RTIM, RTMR, RTRP) \
	SLOWCOMBO(_ltpr, LTPR, 0 1) \
	COMBO(_ltrm, LTRM, 1 2) \
	COMBO(_ltmi, LTMI, 2 3) \
	COMBO(_rtim, RTIM, 4 5) \
	COMBO(_rtmr, RTMR, 5 6) \
	SLOWCOMBO(_rtrp, RTRP, 6 7)
#define COMBOS_BOT_ROW(LBRM, LBMI, RBIM, RBMR) \
	COMBO(_lbrm, LBRM, 8 9) \
	COMBO(_lbmi, LBMI, 9 10) \
	COMBO(_rbim, RBIM, 11 12) \
	COMBO(_rbmr, RBMR, 12 13)


//  _______________________  _______________________
// |  0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7 |
//       \  8  |  9  | 10  /\  11 |  12 |  13 /
//             \ 14  | 15 /  \ 16 |  17 /
//              ----------    ----------

/{
    combos {
        compatible = "zmk,combos";
/* alphas */
                     //  0+1    1+2    2+3    4+5      5+6      6+7
        COMBOS_TOP_ROW(&kp W, &kp M, &kp B, &kp V, &comsem, &dotcol)
               COMBOS_BOT_ROW(&kp F, &kp P, &kp X, &kp Z)
                            //  8+9   9+10  11+12  12+13

/* usually on base layer */
        COMBO(q, &kp Q, 8 10)
        COMBO(k, &kp K, 2 10)
        COMBO(j, &kp J, 5 11)
        COMBO(shiftablesch, &macro_shiftable_sch, 1 3)
        COMBO(enter, &kp ENTER, 11 13)
        COMBO(esc, &kp ESC, 0 3)
        COMBO(semi, &kp SEMICOLON, 12 16)
        COMBO(colon, &kp COLON, 13 16)
        COMBO(minus, &kp MINUS, 1 9)
        COMBO(slash, &kp SLASH, 6 12)
/* parentheticals */
        COMBO(lt, &kp LT, 1 10)
        COMBO(lbrc, &kp LBRC, 1 8)
        COMBO(lbkt, &kp LBKT, 2 9)
        COMBO(lpar, &kp LPAR, 3 10)
        COMBO(rt, &kp GT, 6 11)
        COMBO(rpar, &kp RPAR, 4 11)
        COMBO(rbkt, &kp RBKT, 5 12)
        COMBO(rbrc, &kp RBRC, 6 13)
/* caps */
        COMBO(caps, &caps_word, 3 4)
        COMBO(capslock, &kp CAPSLOCK, 1 6)
/* deletion */
        COMBO(bspc, &kp BSPC, 4 6)
        SLOWCOMBO(del, &kp DEL, 5 7)
        COMBO(delword, &kp LC(BSPC), 4 7)
/* ble */
				COMBO(ble, &mo BLE, 14 17)
    };
};

//  _______________________  _______________________
// |  0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7 |
//       \  8  |  9  | 10  /\  11 |  12 |  13 /
//             \ 14  | 15 /  \ 16 |  17 /
//              ----------    ----------


/ {
    behaviors {
        hl: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <4 5 6 7 11 12 13 14 15 16 17>;
        };
        hr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <0 1 2 3 8 9 10 14 15 16 17>;
        };

        my_lt: my_layer_taps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <160>;
            quick-tap-ms = <100>;
            bindings = <&mo &kp>, <&kp>;
        };
        dotcol: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comsem: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};


/ {
    keymap {
        compatible = "zmk,keymap";

        aptmak {
            bindings = <
                &hl LCTRL R    &hl LALT S     &hl LGUI T     &hl LSHFT H        &hr RSHFT N    &hr RGUI A     &hr LALT I     &hr RCTRL O
                               &kp C          &kp G          &kp D              &kp L          &kp U          &kp Y
                                              &my_lt NUM SQT &my_lt NAV SPACE   &my_lt SYM E   &my_lt FUN TAB
            >;
        };
        numbers {
            bindings = <
                &hl LCTRL PLUS &hl LALT MINUS &hl LGUI STAR  &hl LSHFT SLASH    &kp N4         &kp N5         &kp N6         &dotcol
                               &kp N9         &kp N8         &kp N7             &kp N1         &kp N2         &kp N3
                                              &trans         &trans             &kp E          &kp N0
            >;
        };
        navigation {
            bindings = <
                &sk LCTRL      &sk LALT       &sk LGUI       &sk LSHFT          &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT
                               &kp C_AC_COPY  &kp C_AC_CUT   &kp C_AC_PASTE     &kp HOME       &kp C_MUTE     &kp END
                                              &trans         &trans             &kp C_VOL_DN   &kp C_VOL_UP
            >;
        };
        symbols {
            bindings = <
                &kp EXCL       &kp AT         &kp HASH       &kp DOLLAR         &kp AMPERSAND  &kp ASTERISK   &kp PERCENT    &kp CARET
                               &kp GRAVE      &kp DQT        &kp UNDERSCORE     &kp BACKSLASH  &kp PIPE       &kp EQUAL
                                              &kp TILDE      &trans             &trans         &trans
            >;
        };
        function {
            bindings = <
                &bootloader    &kp F12        &kp F11        &kp F10            &kp F4         &kp F5         &kp F6         &none
                               &kp F9         &kp F8         &kp F7             &kp F1         &kp F2         &kp F3
                                              &trans         &trans             &trans         &trans
            >;
        };
        bluetooth {
            bindings = <
                &bt BT_SEL 0    &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3            &bt BT_SEL 4        &none         &bootloader         &sys_reset
                               &bt BT_CLR         &bt BT_PRV         &bt BT_NXT             &none         &none         &none
                                              &trans         &trans             &trans         &trans
            >;
        };
    };
};
