/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define SYM 2
#define SYS 3
#define FNS 4

/ { 

/*           34 Keys
╭──────────────╮ ╭──────────────╮
│ 0  1  2  3  4│ │ 5  6  7  8  9│
│10 11 12 13 14│ │15 16 17 18 19│
│20 21 22 23 24│ │25 26 27 28 29│
╰────────╮30 31│ │32 33╭────────╯
         ╰─────╯ ╰─────╯       */

    combos {
			compatible = "zmk,combos";

			combo_shift_l {
				key-positions = <3 13>;
				bindings = <&kp LSHIFT>;
			};

			combo_shift_r {
				key-positions = <6 16>;
				bindings = <&kp LSHIFT>;
			};

			combo_ctrl_l {
				key-positions = <2 12>;
				bindings = <&kp LCTRL>;
			};

			combo_ctrl_r {
				key-positions = <7 17>;
				bindings = <&kp LCTRL>;
			};

			combo_gui_l {
				key-positions = <1 11>;
				bindings = <&kp LGUI>;
			};

			combo_gui_r {
				key-positions = <8 18>;
				bindings = <&kp LGUI>;
			};

			combo_alt_l {
				key-positions = <0 10>;
				bindings = <&kp LALT>;
			};

			combo_alt_r {
				key-positions = <9 19>;
				bindings = <&kp LALT>;
			};

			combo_bkspc {
				key-positions = <30 31>;
				bindings = <&kp BSPC>;
			};

			combo_syslayer {
				key-positions = <30 33>;
				bindings = <&mo SYS>;
			};

			combo_fnlayer {
				key-positions = <26 28>;
				bindings = <&mo FNS>;
			};

			combo_esc {
				key-positions = <5 15>;
				bindings = <&kp ESC>;
			};

			combo_tab {
				key-positions = <4 14>;
				bindings = <&kp TAB>;
			};

			combo_tmux_prefix {
				key-positions = <32 33>;
				bindings = <&kp LC(A)>;
			};
		};

		keymap {
			compatible = "zmk,keymap";

			base {
				label = "BASE";
				bindings = <
					&kp Q		&kp W		&kp E		&kp R		&kp T						&kp Y		&kp U		&kp I		&kp O		&kp P
					&kp A		&kp S		&kp D		&kp F		&kp G						&kp H		&kp J		&kp K		&kp L		&kp SEMI
					&kp Z		&kp X		&kp C		&kp V		&kp B						&kp N		&kp M		&kp COMMA	&kp DOT		&kp SLASH 
					&mo NAV		&kp SPACE					&kp RET		&mo SYM
					>;
			};

			nav {
				label = "NAV";
				bindings = <
					&kp N1		 &kp N2		&kp N3		&kp N4		&kp N5						&kp N6		&kp	N7		 &kp N8		&kp N9		&kp N0
					&caps_word &kp Z		&kp LC(C)	  &kp V		&kp LC(V)					    &kp LEFT	&kp DOWN	 &kp UP		&kp RIGHT &kp LG(LC(RIGHT))
					&kp LS(N1) &kp LS(N2)	&kp LS(N3)	&kp LS(N4)	&kp LS(N5)					&kp LS(N6) 	&kp	LS(N7) &kp LS(N8)	&kp LG(LC(LEFT))	&none
					&trans		&none						&none		&none
					>;
			};

			sym {
				label = "SYM";
				bindings = <
					&kp LS(N6)	&kp LBKT	&kp LS(N2)	&kp RBKT	&kp NON_US_HASH					  &kp K	&kp PLUS	&kp MINUS	&kp UNDER	&kp QMARK
					&kp LS(N4)	&kp LPAR	&kp SQT		&kp RPAR	&kp	LS(NON_US_BSLH)					&kp LS(NON_US_HASH)	&kp LT	&kp EQUAL	&kp GT 	&kp LS(SQT)
					&none				&kp	LBRC	&kp GRAVE	&kp RBRC	&none								        &none &kp NON_US_BSLH	&none	&kp SLASH &none
					&kp LC(BSPC)	&kp DEL						&none		&trans
					>;
			};

			sys {
				label = "SYS";
				bindings = <
					&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4		&bt BT_PRV	&none		&none		&none		&bt BT_CLR
					&none		&none		&none		&none		&none					&bt BT_NXT		&none		&none		&none		&none
					&sys_reset	&bootloader		&none		&none		&none						&none		&none		&none	&bootloader		&sys_reset												
					&trans		&none						&none		&trans
					>;
			}; 

			fns {
				label = "FNS";
				bindings = <
					&kp F1		&kp F2		&kp F3		&kp F4		&kp F5						&none		&none		&none		&none		&none
					&kp F6		&kp F7		&kp F8		&kp F9		&kp F10						&none		&none		&none		&none		&none
					&none     &kp F11		&kp F12		&kp F13		&none							&none		&none		&none		&none		&none
					&none		&none						&none		&none
					>;
			};            
		};
};
